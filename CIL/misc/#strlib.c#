/*
 * filename : strlib.c
 * author   : Takahiro Sugiyama
 * date     : 1993/09/13
 */



#include <stdio.h>
#include "strlib.h"
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
//#include <malloc.h>



/*=================================*
 * strnew : ’¿·’¤·’¤¤’Ê¸’»ú’Îó’¤ò’³Î’ÊÝ’¤¹’¤ë
 *=================================*/
char *strnew /* ’Ê¸’»ú’Îó */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  if ( str == 0 ) return 0;
  return ( char * )strcpy(( char * )malloc( strlength( str ) + 1 ), str );
}



/*=============================*
 * strfree :  ’Ê¸’»ú’Îó’¤ò’²ò’Êü’¤¹’¤ë
 *=============================*/
void strfree
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  if ( str ) free( str );
}



/*==========================*
 * strlength : ’Ê¸’»ú’Îó’¤Î’Ä¹’¤µ
 *==========================*/
long strlength /* ’Ê¸’»ú’¿ô */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
:q
{
  return ( str ) ? strlen( str ) : 0;
}



/*=========================================*
 * strprintlength : ’É½’¼¨’²Ä’Ç½’¤Î’Ê¸’»ú’Îó’¤Î’Ä¹’¤µ
 *=========================================*/
long strprintlength /* ’Ê¸’»ú’¿ô */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  int i, n, esc;

  esc = 0;
  n = strlength( str );
  for ( i = 0; i < n; i++ )
    if ( str[ i ] == '' ) esc++;

  return n - esc * 4;
}



/*===============================*
 * strcompare : ’Ê¸’»ú’Îó’¤ò’Èæ’³Ó’¤¹’¤ë
 *===============================*/
int strcompare /* ’Ê¸’»ú’Îó’¤Î’º¹ */
  _P2 (( char *, str1 ), /* ’Ê¸’»ú’Îó’£± */
       ( char *, str2 )) /* ’Ê¸’»ú’Îó’£² */
{
  if ( str1 == 0 || str2 == 0 ) return ( int )( str1 - str2 );

  return strcmp( str1, str2 );
}



/*======================================*
 * strsubcompare : ’Ê¸’»ú’Îó’¤ò’Éô’Ê¬’Èæ’³Ó’¤¹’¤ë
 *======================================*/
int strsubcompare /* ’Ê¸’»ú’Îó’¤Î’º¹ */
  _P3 (( char *, str1 ), /* ’Ê¸’»ú’Îó’£± */
       ( char *, str2 ), /* ’Ê¸’»ú’Îó’£² */
       ( int   , n    )) /* ’Ê¸’»ú’¿ô   */
{
  if ( n <= 0 )
    {
      fprintf( stderr, "warning:strsubcompare:arg #3 n (%d) is wrong.\n", n );
      return 0;
    }

  if ( str1 == 0 || str2 == 0 ) return ( int )( str1 - str2 );

  return strncmp( str1, str2, n );
}



/*==========================================================*
 * strxcompare : ’Ê¸’»ú’Îó’¤ò’Âç’Ê¸’»ú’¾®’Ê¸’»ú’¤Î’¶è’ÊÌ’¤Ê’¤·’¤Ë’Èæ’³Ó’¤¹’¤ë’¡£
 *==========================================================*/
int strxcompare /* ’Ê¸’»ú’Îó’¤Î’º¹  */
  _P2 (( char *, str1 ), /* ’Ê¸’»ú’Îó’£± */
       ( char *, str2 )) /* ’Ê¸’»ú’Îó’£² */
{
  if ( str1 == 0 || str2 == 0 ) return ( int )( str1 - str2 );

  return strcasecmp( str1, str2 );
}



/*===============================================================*
 * strxsubcompare : ’Ê¸’»ú’Îó’¤ò’Âç’Ê¸’»ú’¾®’Ê¸’»ú’¤Î’¶è’ÊÌ’¤Ê’¤·’¤Ë’Éô’Ê¬’Èæ’³Ó’¤¹’¤ë
 *===============================================================*/
int strxsubcompare /* ’Ê¸’»ú’Îó’¤Î’º¹ */
  _P3 (( char *, str1 ), /* ’Ê¸’»ú’Îó’£± */
       ( char *, str2 ), /* ’Ê¸’»ú’Îó’£² */
       ( int   , n    )) /* ’Ê¸’»ú’¿ô   */
{
  if ( n <= 0 )
    {
      fprintf( stderr, "warning:strxsubcompare:arg #3 n (%d) is wrong.\n", n );
      return 0;
    }

  if ( str1 == 0 || str2 == 0 ) return ( int )( str1 - str2 );

  return strncasecmp( str1, str2, n );
}



/*=================================*
 * strcopy : ’Ê¸’»ú’Îó’¤ò’¥³’¥Ô’¡¼’¤·’¤Þ’¤¹’¡£
 *=================================*/
char *strcopy /* ’¥³’¥Ô’¡¼’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
  _P2 (( char *, dest ), /* ’¥³’¥Ô’¡¼’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( char *, src  )) /* ’¥³’¥Ô’¡¼’¸µ’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
{
  if ( dest == 0 || src == 0 ) return dest;

  return strcpy( dest, src );
}



/*========================================*
 * strsubcopy : ’Ê¸’»ú’Îó’¤ò’Éô’Ê¬’¥³’¥Ô’¡¼’¤·’¤Þ’¤¹’¡£
 *=======================================*/
char *strsubcopy /* ’¥³’¥Ô’¡¼’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
  _P3 (( char *, dest ), /* ’¥³’¥Ô’¡¼’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( char *, src  ), /* ’¥³’¥Ô’¡¼’¸µ’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( int   , n    )) /* ’¥³’¥Ô’¡¼’Ê¸’»ú’¿ô           */
{
  if ( n <= 0 )
    {
      fprintf( stderr, "warning:strsubcopy:arg #3 n (%d) is wrong.\n", n );
      return 0;
    }

  if ( dest == 0 || src == 0 ) return dest;

  return strncpy( dest, src, n );
}



/*=================================================*
 * strappen     : ’Ê¸’»ú’Îó’¤ò’Ê¸’»ú’Îó’¤Ë’¥¢’¥Ú’¥ó’¥É’¤·’¤Þ’¤¹’¡£
 *=================================================*/
char *strappend /* ’¥¢’¥Ú’¥ó’¥É’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
  _P2 (( char *, dest ), /* ’¥¢’¥Ú’¥ó’¥É’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( char *, src  )) /* ’¥¢’¥Ú’¥ó’¥É’¸µ’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
{
  if ( dest == 0 || src == 0 ) return dest;

  return strcat( dest, src );
}



/*=======================================================*
 * strsubappend : ’Ê¸’»ú’Îó’¤Î’Éô’Ê¬’¤ò’Ê¸’»ú’Îó’¤Ë’¥¢’¥Ú’¥ó’¥É’¤·’¤Þ’¤¹’¡£
 *=======================================================*/
char *strsubappend /* ’¥¢’¥Ú’¥ó’¥É’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
  _P3 (( char *, dest ), /* ’¥¢’¥Ú’¥ó’¥É’Àè’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( char *, src  ), /* ’¥¢’¥Ú’¥ó’¥É’¸µ’Ê¸’»ú’Îó’¥Ý’¥¤’¥ó’¥¿ */
       ( int   , n    )) /* ’¥¢’¥Ú’¥ó’¥É’Ê¸’»ú’¿ô           */
{
  if ( n <= 0 )
    {
      fprintf( stderr, "warning:strsubcopy:arg #3 n (%d) is wrong.\n", n );
      return 0;
    }

  if ( dest == 0 || src == 0 ) return dest;

  return strncat( dest, src, n );
}



/*-------------------------------------------------*
 * __strin : ’Ê¸’»ú’¥ê’¥¹’¥È’¤Ë’Ê¸’»ú’¤¬’Æþ’¤Ã’¤Æ’¤¤’¤ë’¤«’Ä´’¤Ù’¤ë’¡£
 *-------------------------------------------------*/
static long __strin /* ’¿¿’Íý’ÃÍ */
  _P2 (( int   , c     ), /* ’¥Á’¥§’¥Ã’¥¯’Ê¸’»ú */
       ( char *, clist )) /* ’Ê¸’»ú’¥ê’¥¹’¥È   */
{
  register int i;

  for ( i = 0; clist[ i ]; i++ ) if ( c == clist[ i ] ) return 1;

  return 0;
}



/*==============================================================*
 * strsplit : ’Ê¸’»ú’Îó words ’¤ò ’¶è’ÀÚ’¤ê’Ê¸’»ú separater ’¤Ç’Ê¬’Î¥’¤·’¤Æ’¡¢
 *            ’³Æ’Àè’Æ¬’¤ò head ’¤Ë’Æþ’¤ì’¤ë’¡£
 *            ’ÊÖ’¤ê’ÃÍ’¤È’¤·’¤Æ’¶è’ÀÚ’¤ì’¤¿’Ê¸’»ú’Îó’¤Î’¿ô’¤ò’ÊÖ’¤¹
 *==============================================================*/
long strsplit /* ’Ê¸’»ú’Îó’¤Î’¿ô */
  _P3 (( char  *, words     ), /* ’Ê¸’»ú’Îó           */
       ( char **, head      ), /* ’Ê¬’Î¥’Ê¸’»ú’Îó’¥ê’¥¹’¥È */
       ( char  *, separater )) /* ’¶è’ÀÚ’¤ê’Ê¸’»ú’¥ê’¥¹’¥È */
{
  char *back_letters;
  int n;
  int nwords = strlength( words );
  int i;

  if ( nwords == 0 ) { head[ 0 ] = "" ; return 0; }

  back_letters = strnew(words);

  for ( i = 0; i < nwords; i++ )
    {
      if ( __strin( words[ i ], separater ) )
	{
	  words[ i ] = 0;
	}
      else
	{
	  if ( words[ i ] == '"' )
	    {
	      words[ i++ ] = '\0';
	      while (( i < nwords ) && ( words[ i ] != '"' )) i++;
	      if ( i < nwords ) words[ i ] = '\0';
	    }
	  else
	  if ( words[ i ] == '\'' )
	    {
	      int bi = i;
	      char bc = words[ i ];

	      words[ i++ ] = '\0';
	      while (( i < nwords ) && ( words[ i ] != '\'' )) i++;
	      if ( i < nwords )
		words[ i ] = '\0';
	      else
		{
		  words[ bi ] = bc;
		  i = bi;
		}
	    }
	}
    }

  n = 0;
  i = 0;
  while ( i < nwords )
    {
      while (( words[ i ] == '\0' ) && ( i < nwords ))
	{
	  if (back_letters[i] == '\"' && back_letters[i+1] == '\"')
	    {
	      head[ n++ ] = words + i;
	    }
	  i++;
	}
      if ( i < nwords )
	{
	  head[ n++ ] = words + i;
	  while (( words[ i ] != '\0' ) && ( i < nwords ))
	    i++;
	}
    }
  strfree(back_letters);

  return n;
}



/*===========================================*
 * strtolong : ’Ê¸’»ú’Îó’¤ò long ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *===========================================*/
long strtolong /* ’À°’¿ô’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  return ( str ) ? atol( str ) : 0;
}



/*=============================================*
 * strtoulong : ’Ê¸’»ú’Îó’¤ò ulong ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *=============================================*/
unsigned long strtoulong /* ’À°’¿ô’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  return ( str ) ? atol( str ) : 0;
}



/*================================================*
 * strtodouble : ’Ê¸’»ú’Îó’¤ò double ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *================================================*/
double strtodouble /* ’¼Â’¿ô’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  return ( str ) ? atof( str ) : 0;
}



/*=================================================*
 * strtolboolean : ’Ê¸’»ú’Îó’¤ò boolean ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *=================================================*/
long strtoboolean /* ’¿¿’Íý’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  return ( strxcompare( str, "true" ) == 0 );
}



/*====================================*
 * strfromlong : long ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *====================================*/
char *strfromlong /* ’Ê¸’»ú’Îó */
  _P2 (( long  , src  ), /* ’À°’¿ô’ÃÍ */
       ( char *, dest )) /* ’Ê¸’»ú’Îó */
{
  static char tmp[ 64 ];
  if ( dest == 0 ) dest = tmp;
  sprintf( dest, "%d", src );
  return dest;
}



/*=======================================*
 * strfromulong : ulong ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *=======================================*/
char *strfromulong /* ’Ê¸’»ú’Îó */
  _P2 (( unsigned long, src  ), /* ’À°’¿ô’ÃÍ */
       ( char *       , dest )) /* ’Ê¸’»ú’Îó */
{
  static char tmp[ 64 ];
  if ( dest == 0 ) dest = tmp;
  sprintf( dest, "%u", src );
  return dest;
}



/*========================================*
 * strfromdouble : double ’·¿’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *========================================*/
char *strfromdouble /* ’Ê¸’»ú’Îó */
  _P2 (( double, src  ), /* ’¼Â’¿ô’ÃÍ */
       ( char *, dest )) /* ’Ê¸’»ú’Îó */
{
  static char tmp[ 64 ];
  if ( dest == 0 ) dest = tmp;
  sprintf( dest, "%.5f", src );
  return dest;
}



/*==============================================================*
 * strfromboolean : long ’·¿’¤ò’Ê¸’»ú’Îó("true","false")’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *==============================================================*/
char *strfromboolean /* ’Ê¸’»ú’Îó */
  _P2 (( long  , src  ), /* ’¿¿’Íý’ÃÍ */
       ( char *, dest )) /* ’Ê¸’»ú’Îó */
{
  static char tmp[ 8 ];

  if ( dest == 0 ) dest = tmp;
  if ( src ) sprintf( dest, "true" ); else sprintf( dest, "false" );
    
  return dest;
}



/*============================================================*
 * strjistoeuc : JIS ’´Á’»ú’¥³’¡¼’¥É’¤ò EUC ’´Á’»ú’¥³’¡¼’¥É’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *============================================================*/
void strjistoeuc       
  _P2 (( char *, dst ), /* EUC ’´Á’»ú’¥³’¡¼’¥É’Ê¸’»ú’Îó */
       ( char *, str )) /* JIS ’´Á’»ú’¥³’¡¼’¥É’Ê¸’»ú’Îó */
{
  int i,j,n = 0;

  n = strlength( str );

  for ( j = i = 0; i < n; i++ )
    {
      if ( str[i] == 0x1b &&  str[i+1] == 0x24 && str[i+2] == 0x40 )
	{
	  i += 3;
	  while ( str[ i ] != 0x1b && str[i] != '\0')
	    dst[ j++ ] = 0x80 | str[ i++ ];
	  i += 3;
	}
      else
	{
	  while ( str[ i ] != 0x1b && str[ i ] != '\0' )
	    dst[ j++ ] = str[ i++ ];
	}
      i--;
    }
  dst[ j ] = '\0';
}



/*================================================*
 * strisdigit : ’Ê¸’»ú’Îó’¤¬’¿ô’»ú’¤À’¤±’¤«’¤É’¤¦’¤«’Ä´’¤Ù’¤Þ’¤¹’¡£
 *================================================*/
long strisdigit /* ’¿¿’Íý’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  int i;

  if ( str == 0 ) return 0;

  for ( i = 0; str[ i ]; i++ )
    if ( ! isdigit( str[ i ] ) ) return 0;

  return 1;
}



/*================================================*
 * strisreal : ’Ê¸’»ú’Îó’¤¬’¼Â’¿ô’¤«’¤É’¤¦’¤«’Ä´’¤Ù’¤Þ’¤¹’¡£
 *================================================*/
long strisreal /* ’¿¿’Íý’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  int i;

  if (str == 0) return 0;

  for (i = 0; str[i]; i++)
    if ((! isdigit(str[i])) && (str[i] != '.')) return 0;

  return 1;
}



/*=======================================================*
 * strismoney : ’Ê¸’»ú’Îó’¤¬’¿ô’»ú’¤È’¡É’¡¤’¡É’¤À’¤±’¤«’¤É’¤¦’¤«’Ä´’¤Ù’¤Þ’¤¹’¡£
 *=======================================================*/
long strismoney /* ’¿¿’Íý’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  long i, n;

  n = strlen( str );
  for ( i = 0; i < n; i++ )
    if (( ! isdigit( str[ i ] ) ) &&
	(str[ i ] != ' ') && (str[ i ] != '\t') && (str[ i ] != ',') )
      return 0;

  return 1;
}



/*======================================================*
 * strtomoney : ’¿ô’»ú’¤È’¡É’¡¤’¡É’¤Î’Ê¸’»ú’Îó’¤ò’À°’¿ô’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *======================================================*/
long strtomoney /* ’À°’¿ô’ÃÍ */
  _P1 (( char *, str )) /* ’Ê¸’»ú’Îó */
{
  long i, n, money;
  long start = 0;

  money = 0;
  n = strlen( str );
  for ( i = 0; i < n; i++ )
    {
      switch( str[ i ] )
	{
	case '0': case '1': case '2': case '3': case '4':
	case '5': case '6': case '7': case '8': case '9':
	  money = money * 10 + str[ i ] - '0';
	  start = 1;
	  break;
	case ',':
	  if ( ! start ) return money;

	case ' ': case '\t':
	  break;

	default:
	  return money;
	}
    }
  return money;
}



/*========================================================*
 * strfrommoney : ’À°’¿ô’¤ò’¿ô’»ú’¤È’¡É’¡¤’¡É’¤Î’Ê¸’»ú’Îó’¤Ë’ÊÑ’´¹’¤·’¤Þ’¤¹’¡£
 *========================================================*/
char *strfrommoney /* ’Ê¸’»ú’Îó */
  _P2 (( long  , src  ), /* ’À°’¿ô’ÃÍ */
       ( char *, dest )) /* ’Ê¸’»ú’Îó */
{
  static char tmp[ 64 ];
  char sub[ 64 ];
  long n, f, i, j;

  if ( dest == 0 ) dest = tmp;

  sprintf( sub, "%d", src );
  n = strlen( sub );

  if ( sub[ 0 ] == '-' ) f = n - 1; else f = n;

  for ( j = i = 0; i < n; i++ )
    {
      dest[ j++ ] = sub[ i ];
      if (((( f - i - 1 ) % 3 ) == 0 ) && ( i != ( n - 1)) && sub[ i ] != '-' )
	{
	  dest[ j++ ] = ',';
	}
    }
  dest[ j ] = 0;

  return dest;
}



/*==================================*
 * strprintf : ’Ê¸’»ú’Îó’¤Ë’¥×’¥ê’¥ó’¥È’¤¹’¤ë
 *==================================*/
#ifdef __strprintf__
#include <varargs.h>
long strprintf( buf, format, va_alist )
     char *buf;
     char *format;
     int va_alist;
{
  char string[ 1024 ];
  va_list args;

  va_start( args );
  vsprintf( string, format, args );
  va_end( args );

  strcopy( buf, string );

  return strlength( buf );
}
#endif
